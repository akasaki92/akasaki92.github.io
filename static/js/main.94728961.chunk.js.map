{"version":3,"sources":["components/navigation/index.js","components/intro/index.js","components/aboutme/index.js","components/footer/index.js","app/index.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","id","href","Intro","className","AboutMe","Footer","App","components_navigation","components_intro","components_aboutme","components_footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","app","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94728961.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Nav = props => {\r\n    return (\r\n        <nav>\r\n            <ul id=\"navbar\">\r\n                <li>\r\n                    <a href=\"#aboutme\">About</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#projects\">Work</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./intro.scss\";\r\n\r\nconst Intro = (props) => {\r\n    return (\r\n        <div id=\"welcome\" className=\"intro\">\r\n            <h1>Junior Front-end Developer</h1>\r\n            <samp>I code from design mockup to web, and i love pudding :)</samp>\r\n            <h2>Hi, i'm Adam. Nice to meet you</h2>\r\n            {/* profile image*/}\r\n        </div>\r\n    );\r\n};\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport \"./aboutme.scss\";\r\n\r\nconst AboutMe = props => {\r\n    return (\r\n        <div id=\"aboutme\" className=\"aboutme\">\r\n            {/* image loader */}\r\n            {/* <img src=\"https://avatars2.githubusercontent.com/u/25558529?v=4\" alt=\"avatar\" class=\"profil-image\"> */}\r\n            <h1>Raden Adam Santiaji</h1>\r\n            <p>Junior Frontend developer</p>\r\n            <div className=\"english\">\r\n                <p>\r\n                    I am currently working as a volunteer Junior front-end\r\n                    developer at Kreatorku.com,\r\n                </p>\r\n                <p>\r\n                    there I have done remote work, helping in research and web\r\n                    development.\r\n                </p>\r\n            </div>\r\n            <div className=\"whatToDo\">\r\n                <h1>What I can do:</h1>\r\n                <p>I'm code from design mockup to apps.</p><p />\r\n                <h4>Language I use</h4>\r\n                <p>HTML, CSS/SCSS, PHP, Javascript, Java, SQL</p>\r\n                <h4>Dev tools</h4>\r\n                <ul>\r\n                    <li>Angular 1 years experience</li>\r\n                    <li>Laravel 2 years experience</li>\r\n                    <li>Lumen 1 years experience</li>\r\n                    <li>Visual Studio Code</li>\r\n                    <li>Github</li>\r\n                    <li>Terminal</li>\r\n                    <li>Ubuntu WSL</li>\r\n                    <li>Trello</li>\r\n                    <li>Laragon</li>\r\n                    <li>Lampp</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default AboutMe;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = props => {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                <label>FIND ME ELSEWHERE : </label>\r\n                <span>\r\n                    <a href=\"https://linkedin.com/in/adam-santiaji/\">\r\n                        LinkedIn\r\n                    </a>\r\n                    &nbsp;\r\n                </span>\r\n                <span>\r\n                    <a href=\"hsttps://github.com/akasaki92/\">Github</a>\r\n                    &nbsp;\r\n                </span>\r\n                <span>\r\n                    <a href=\"mailto:adam.wikrama@gmail.com\">Email me</a>\r\n                    &nbsp;\r\n                </span>\r\n            </p>\r\n        </footer>\r\n    );\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\n\nimport Nav from \"../components/navigation\";\nimport Intro from \"../components/intro\";\nimport Aboutme from \"../components/aboutme\";\nimport Footer from \"../components/footer\";\n// import Works from \"../contaners/works\";\n\nimport \"./App.scss\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Nav />\n            <Intro />\n            <Aboutme />\n            {/* Work container\n            <Works header=\"Here my some of my training result\" /> */}\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}